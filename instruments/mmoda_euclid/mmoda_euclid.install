<?php
$module_name = basename(__FILE__, '.install');
list ($core_module_name) = explode('_', $module_name);
include_once drupal_get_path('module', $core_module_name) . '/' . $core_module_name . '.lib.inc';

/**
 *
 * @file
 * Install, update and uninstall functions for the mmoda module.
 */
function mmoda_euclid_instrument_info()
{
  $info = array(
    'name' => 'euclid',
    'messenger' => 'XXXXXXX',
    'title' => 'Euclid'
  );

  return $info;
}

/**
 * Implements hook_requirements().
 */
function mmoda_euclid_requirements($phase)
{
  $module_name = basename(__FILE__, '.install');
  $current_dir = drupal_get_path('module', $module_name);
  $requirements = array();
  $conflicts = array();
  if ('install' == $phase) {
    $filters = array();
    if (_mmoda_euclid_read_filters_file($current_dir . '/euclid_filters.csv', $filters))
      $requirements[$module_name] = array(
        'title' => t('A valid Euclid filters CSV file'),
        'description' => t('The Euclid filters file euclid-filters.csv must be present in the module root directory and it must be valid.'),
        'severity' => REQUIREMENT_ERROR
      );
  }

  if ($phase == 'runtime') {}

  return $requirements;
}

/**
 * Implements hook_install().
 */
function mmoda_euclid_install()
{
  $instrument_info = mmoda_euclid_instrument_info();

  $module_settings = array(
    'enabled' => TRUE,
    'osa_version' => 'OSA11.2',
    'radius' => 15,
    'scw_list' => '005100410010.001,005100420010.001',
    'max_pointings' => 50,
    'integral_data_rights' => 'public',
    'E1_keV' => 28.0,
    'E2_keV' => 40.0,
    'query_type' => 'Real',
    'detection_threshold' => 7.0,
    'product_type' => 'euclid_image',
    'time_bin' => 1000,
    'time_bin_format' => 'sec',
    'weight' => -10,
    'acknowledgement' => '
    If you use results or material from this instrument in our application, ODA, do not
    forget to quote our paper:<br> <a
      href="https://arxiv.org/abs/2002.12895" target="_blank">A.
      Neronov, V. Savchenko, A. Tramacere, M. Meharga, C. Ferrigno,
      S.Paltani<br> An online data analysis system of INTEGRAL telescope
    </a>',
    'enable_use_catalog' => TRUE,
    'data_server_local_url' => 'dispatch-data/run_analysis'
  );
  $module_settings = array_merge($instrument_info, $module_settings);

  $module_name = basename(__FILE__, '.install');
  $current_dir = drupal_get_path('module', $module_name);
  $filters = array();
  _mmoda_euclid_read_filters_file($current_dir . '/euclid_filters.csv', $filters);
  unset($filters['Instrument']);
  $module_settings['filters']=$filters;

  $module_name = basename(__FILE__, '.install');
  _mmoda_common_install($module_name, $instrument_info['name'], $module_settings);
}

/**
 * Implements hook_uninstall().
 */
function mmoda_euclid_uninstall()
{
  $module_name = basename(__FILE__, '.install');
  $instrument = mmoda_euclid_instrument_info()['name'];
  _mmoda_common_uninstall($module_name, $instrument);
}

/**
 * Implements hook_uninstall().
 */
function _mmoda_euclid_read_filters_file($filename, &$filters)
{
  if (! $f = fopen($filename, "r")) {
    $error_message = 'Error, can not read Euclid filters file :' . $filename;
    error_log($error_message);
    watchdog('MMODA_EUCLID', $error_message);
    return (1);
  }
  // read file line by line until the end of file (feof)
  $i = 1;
  while (! feof($f)) {
    $values = fgetcsv($f);
    if ($values !== false and count($values) == 2) {
      if (! array_key_exists($values[0], $filters))
        $filters[$values[0]] = array();
      array_push($filters[$values[0]], $values[1]);
    }
    elseif ($values === false and !feof($f)) {
      $error_message = "Error, bad CSV file, line $i :" . $filename;
      error_log($error_message);
      watchdog('MMODA_EUCLID', $error_message);
      return (1);
    }
    $i ++;
  }
  fclose($f);
  return (0);
}
